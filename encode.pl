#!/usr/bin/perl

use warnings;
use MIME::Base64;
use File::Slurp;
use Imager;

my $image = Imager->new(xsize => 64, ysize => 64); #4,096
my $encodedData = read_file("4096.txt");
$basedEncodedData = encode_base64($encodedData); #$encodedData;#

my @secondTable =
(
    ['A', '0', '0', '0'],
    ['a', '10', '10', '10'],
    ['B', '20', '20', '20'],
    ['b', '30', '30', '30'],
    ['C', '40', '40', '40'],
    ['c', '50', '50', '50'],
    ['D', '60', '60', '60'],
    ['d', '70', '70', '70'],
    ['E', '80', '80', '80'],
    ['e', '90', '90', '90'],
    ['F', '100', '100', '100'],
    ['f', '110', '110', '110'],
    ['G', '120', '120', '120'],
    ['g', '130', '130', '130'],
    ['H', '140', '140', '140'],
    ['h', '150', '150', '150'],
    ['I', '160', '160', '160'],
    ['i', '170', '170', '170'],
    ['J', '180', '180', '180'],
    ['j', '190', '190', '190'],
    ['K', '200', '200', '200'],
    ['k', '210', '210', '210'],
    ['L', '220', '220', '220'],
    ['l', '230', '230', '230'],
    ['M', '240', '240', '240'],
    ['m', '250', '250', '250'],
    ['n', '250', '130', '240'],
    ['n', '250', '130', '230'],
    ['O', '250', '130', '220'],
    ['o', '230', '130', '210'],
    ['P', '250', '130', '200'],
    ['p', '250', '130', '190'],
    ['Q', '250', '130', '180'],
    ['q', '250', '130', '170'],
    ['R', '250', '130', '160'],
    ['r', '250', '130', '150'],
    ['S', '250', '130', '140'],
    ['s', '250', '130', '130'],
    ['T', '250', '130', '120'],
    ['t', '230', '130', '110'],
    ['U', '230', '130', '100'],
    ['u', '230', '130', '90'],
    ['V', '230', '130', '80'],
    ['v', '230', '130', '70'],
    ['W', '230', '130', '60'],
    ['w', '230', '130', '50'],
    ['X', '230', '130', '40'],
    ['x', '230', '130', '30'],
    ['Y', '230', '130', '20'],
    ['y', '230', '130', '10'],
    ['Z', '230', '130', '0'],
    ['0', '130', '30', '110'],
    ['1', '130', '30', '100'],
    ['2', '130', '30', '90'],
    ['3', '130', '30', '80'],
    ['4', '130', '30', '70'],
    ['5', '130', '30', '60'],
    ['6', '130', '30', '50'],
    ['7', '130', '30', '40'],
    ['8', '130', '30', '30'],
    ['9', '130', '30', '20'],
    ['0', '130', '30', '10'],
    ['=', '10', '120', '230'],
    [' ', '70', '145', '145']
);

my @characters = split(//, $basedEncodedData);
my $i = 0;
foreach my $character (@characters) 
{
    $thisShouldBeHardCoded = scalar @secondTable;
    for($ji = 0; $ji < $thisShouldBeHardCoded; $ji++) {
        if($secondTable[$ji][0] =~ /^($character)$/) {
            $color = Imager::Color->new($secondTable[$ji][1], $secondTable[$ji][2], $secondTable[$ji][3]);
            $color->set($secondTable[$ji][1], $secondTable[$ji][2], $secondTable[$ji][3]);
            last;
        }
    }

    $xPos = $i % 64;
    $yPos = int(int($i)/64);
    $image->box(xmin => $xPos, ymin => $yPos, xmax => $xPos, ymax => $yPos, filled => 1, color => $color);
    
    $i++;
}

$image->write(file=>'output.ico') or die 'Cannot save output.png: ', $image->errstr;
